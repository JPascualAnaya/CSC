#!/usr/bin/perl
use strict;
use warnings;
use lib '/opt/www/cne/perl_lib';
use lib '/opt/www/AT/lib';
use Bio::Das;
use CGI qw/:standard/;
use CNE::DB;

# Static settings
my $DAS_SERVER = "http://ancora.genereg.net/das";
my $DAS_SERVER_LOCAL = "http://localhost:9000/das"; # for some reason the ancora... URL does not work from localhost
my $DB_NAME = "cne";
my $DB_HOST = "localhost";
my $DB_USER = "nobody";
my $PAGE_TITLE = "Ancora - Add DAS sources to Ensembl";
my $STYLESHEET = "/main.css";
my $HOME_URL = "/";
my $METHODS_URL = "/methods.html";
my $DEFAULT_ASM = "hg18";

# Get CGI object
my $CGI = CGI->new;

# Print HTML and page header
print_header();
print h3("Add tracks to Ensembl");

# Get id of selected assembly
my $asm = $CGI->param('asm') || $DEFAULT_ASM;

# Connect to DAS server and get all available DAS sources
my $das = Bio::Das->new(-source => $DAS_SERVER_LOCAL) or fail("Could not connect to DAS server $DAS_SERVER_LOCAL");
my @all_sources = $das->sources or fail("Could not get sources from DAS server $DAS_SERVER_LOCAL");

# Connect to CNE database
my $db = CNE::DB->connect(dbhost => $DB_HOST,
			  dbname => $DB_NAME,
			  dbuser => $DB_USER)
  or fail("could not connect to db $DB_NAME @ $DB_HOST");

# If the form was submitted, then go to upload tracks, else print form
if($CGI->param('load')) {
    if($CGI->param('cne_sources') or $CGI->param('dens_sources')) {
	add_tracks($db, $asm, \@all_sources);
	
    }
    else {
	print p(b("Please select one or more tracks"));
	print_form($db, $asm, \@all_sources);
    }
}
else {
    print_form($db, $asm, \@all_sources);
}

# Done!
print $CGI->end_html();
exit;


##
## Subroutines
##

sub print_header
{

    print $CGI->header();
    print $CGI->start_html(-title => $PAGE_TITLE,
			   -style => $STYLESHEET), "\n\n";
    print '<p align="center"><a href="/" align="center"><img src="/logo.png" border=0 alt="Ancora"></a></p>';
    
}


sub print_form
{
    my ($db, $selected_asm, $all_sources) = @_;

    # Go trough all available sources to get some info
    my (@cne_sources, @dens_sources);
    my %asm_id2label;
    my %source_id2sim;
    foreach my $s (@$all_sources) {
	
	# Get assembly id and annotation type from source id
	my ($asm_id, $annot_type, $sim) = $s->id =~ /^([^_]+)_([^_]+)_[^_]+_len\d+_id(\d+)/;
	next unless($sim); # Ignore non-CNE sources
	
	# Remember this source if it is for the selected assembly
	if($annot_type eq 'cne') {
	    push @cne_sources, $s if($asm_id eq $selected_asm);
	}
	elsif($annot_type eq 'cneDens') {
	    push @dens_sources, $s if($asm_id eq $selected_asm);
	}
	else {
	    next;  # Ignore non-CNE sources
	}
	
	# Keep track of which assemblies we have sources for
	$asm_id2label{$asm_id} = undef;
	
	# Keep track of similarity for each source; we'll use this to sort by later
	$source_id2sim{$s->id} = $sim;
    }
    
    # Get labels for assemblies
    foreach my $asm_id (keys %asm_id2label) {
	my $asm_info = $db->get_assembly_info($asm_id);
	if($asm_info) {
	    my $label = make_organism_string($asm_info).' '.$asm_info->{assembly_name}.' ('.$asm_info->{assembly_id}.')';
	    $asm_id2label{$asm_id} = $label;
	}
	else {
	    warn "Assembly $asm_id not in CNE database";
	    delete $asm_id2label{$asm_id};
	}
    }
    
    # Start form
    print start_form(-name => 'mainform');

    # Assembly selection
    my $asm_sel = popup_menu(-name => 'asm',
			     -values => [sort {$asm_id2label{$a} cmp $asm_id2label{$b}} keys %asm_id2label],
			     -default => 'hg18',
			     -labels => \%asm_id2label,
			     -linebreak => 'true',
			     -onChange => 'document.mainform.submit();');   
    
    # DAS source selection
    my $cne_sel = @cne_sources ? 
	checkbox_group(-name => 'cne_sources',
			 -values => [sort { $source_id2sim{$b} <=> $source_id2sim{$a} } map { $_->id } @cne_sources],
			 -linebreak => 'true',
			 -labels => { map { $_->id => $_->description } @cne_sources} )
	: "";   
    my $dens_sel = @dens_sources ? 
	checkbox_group(-name => 'dens_sources',
		       -values => [sort { $source_id2sim{$b} <=> $source_id2sim{$a} } map { $_->id } @dens_sources],
		       -linebreak => 'true',
		       -labels => { map { $_->id => $_->description } @dens_sources} )
	: "No HCNE density tracks are available through DAS for this genome assembly.";
    
    # Submit button 
    my $button = submit('load', 'Proceed');

    # Print form
    # I use plain HTML here instead of CGI functions because the latter leads to code that is quite hard to
    # read due to many nested statements. Using plain HTML should also speed up execution.
    print <<EndOfTable;
<table class="maincenter" cellspacing="5">
 <tr>
  <td class="textbox" style="padding-top:0px">
   <table>
    <tr>
     <td valign="top">
      <p><b>1. Select genome assembly</b></p>
      <p>$asm_sel</p>   
      <p>This is the genome assembly that you wish to see the features on in Ensembl.</p>
     </td>
    </tr>
   </table>
  </td>
  <td class="textbox" style="padding-top:0px">
   <table>
    <tr>
     <td valign="top">
      <p><b>1. Select tracks</b></p>
      <p><u>HCNE tracks</u></p>
      <p>$cne_sel</p>   
     </td>
     <td valign="top">
      <p>&nbsp;</p>
      <p><u>HCNE density tracks</u></p>
      <p>$dens_sel</p>   
     </td>
    </tr>
    <tr>
     <td colspan="2">
      Values within parentheses indicate similarity and size thresholds for HCNEs,
      and sliding window size for density calculations (see <a href="$METHODS_URL">Methods</a>).
     </td>
    </tr>
   </table>
  </td>
 </tr>
 <tr>
  <td colspan="2"><p class="center">$button</p></td>
 </tr>
</table>

EndOfTable

   # End form
    print end_form(), "\n";

    # Print warning about bugs in Ensembl
    print "
<hr><table class=\"maincenter\">
<tr><td>
<p style=\"max-width:500px\">
<b>Please note the following when adding tracks to Ensembl</b><br>
There are currently a number of problems with the DAS support in Ensembl.
You may find the following things confusing:</p>
<ul style=\"max-width:500px\">
<li>Tracks that you add will be visible on all genomes in Ensembl, although they are only valid for one
genome assembly. It is therefore a good idea to remove tracks that you have added for one genome
before adding tracks for a different genome.
<li>Sometimes tracks do not appear. If this happens, try to click the <i>Refresh</i> button in Ensembl ContigView.
<li>For density plots, y-axis limits are automatically set to the range of density values in the displayed segment.
For example, if density values in a displayed segment range from 5 to 10, Ensembl ContigView will set the y-axis to
span this range.
The scale and range of the y-axis will therefore change as you zoom in/out and move between different locations in a genome.
To get an idea of the scale, you can inspect values at different positions by clicking on density plots.
(This is not a bug, but due to lack of stylesheet-support for quantitative DAS tracks in Ensembl.)
</ul>
<p style=\"max-width:500px\">We have informed the Ensembl team about these issues.</p>
</tr></td></table><hr>";


#    print table({-class => 'maincenter', -cellspacing => 5}, 
#		Tr(td({-class => 'textbox', style => 'padding-top:0px'}, 
#		      [table({-cellspacing=>4},
#			     Tr(td({-valign => 'top'},
#				   p(b('1. Select genome assembly')).p($asm_sel).p("")
#				   )))."\n",
#		       table({-cellspacing=>4},
#			     Tr(td({-valign => 'top'},
#				   [p(b('2. Select tracks')).p(u('HCNE tracks')).p($cne_sel),
#				    p('&nbsp;').p(u('Density tracks')).p($dens_sel)])))
#		      ])),
#		Tr(td({-colspan => 2}, p("Values within parentheses indicate similarity and size thresholds for HCNEs, ".
#					 "and sliding window size for density calculations (see ".
#					 a({-href => $METHODS_URL}, "Methods").').'))),
#		Tr(td({-colspan => 2}, p({-class => 'center'}, submit('load', 'Proceed')))))."\n";


#<li>You can remove tracks by selecting <i>Manage sources...</i> from the <i>DAS sources</i> menu in Ensembl ContigView.
#However, after removing a track, you may be taken to a page saying \"No DAS sources have been configured for this species\",
#even though several DAS tracks remain.
#Press backspace to return from this page to the <i>Manage sources...</i> page.


}


sub add_tracks
{
    my ($db, $asm, $all_sources) = @_;

    # Index sources by id
    #my %source_index = map {$_->id => $_} @$all_sources;
    
    # Get latin name and default location for genome assembly
    my $asm_info = $db->get_assembly_info($asm) or fail("Unknown assembly $asm.");
    my $organism_latin = $asm_info->{organism_latin};
    $organism_latin =~ s/ /_/g;
    my $loc = $asm_info->{default_ensembl_loc} || '1:1-10000';
    my $short_org_name = make_short_organism_name($asm_info);

    # Construct base URL
    my $url = $asm_info->{ensembl_ver} ? 
	'http://'.$asm_info->{ensembl_ver}.'.archive.ensembl.org/' :
	'http://www.ensembl.org/';
    $url .= "$organism_latin/contigview?conf_script=contigview;l=$loc";

    # Add CNE density sources to URL
    my %short_org_names;
    foreach my $source_id ($CGI->param('dens_sources')) {
	my ($asm2) = $source_id =~ /^[^_]+_[^_]+_([^_]+)/;
	unless($short_org_names{$asm2}) {
	    $short_org_names{$asm2} = make_short_organism_name($db->get_assembly_info($asm2));
	}
	my $source_name = $short_org_names{$asm2}.'_HCNE_dens.';
	$url .= 
	    ";add_das_source=(name=$source_name+url=$DAS_SERVER+dsn=$source_id+".
	    "type=ensembl_location_chromosome+strand=f+labelflag=n+group=y+active=1+stylesheet=y+score=h+fg_merge=m+fg_data=o)";
    }

    # Add CNE sources to URL
    foreach my $source_id ($CGI->param('cne_sources')) {
	my ($asm2) = $source_id =~ /^[^_]+_[^_]+_([^_]+)/;
	unless($short_org_names{$asm2}) {
	    $short_org_names{$asm2} = make_short_organism_name($db->get_assembly_info($asm2));
	}
	my $source_name = $short_org_names{$asm2}.'_HCNEs';
	$url .= 
	    ";add_das_source=(name=$source_name+url=$DAS_SERVER+dsn=$source_id+".
	    "type=ensembl_location_chromosome+strand=f+labelflag=n+depth=10+group=n+active=1+stylesheet=y)";
    }

    my $warning = length($url) > 2000 ? 
	"<p><b>Warning:</b>".
	" Because you have selected many tracks, the URL for the above link is very long (".length($url)." characters).".
	" Some web browsers and web sites do not support URLs of more than 2000 characters.".
	" If you experience problems with the above link, try to add a few tracks at a time instead.</p>"
    : '';

    print <<EndOfTable;
<table class="maincenter" cellspacing="5">
 <tr>
  <td class="textbox">
    <p style="max-width:500px">Click the following link to add the selected tracks to Ensembl ContigView:</p>
    <p style="max-width:500px"><a href ="$url" target="_blank">Add tracks</a></p>
    <p style="max-width:500px">Once you have added a track to Ensembl in this way,
       Ensembl will remember it as part of your preferences,
       so hat you do not have to add it again until your Ensembl preferences expire.</p>      
    <p style="max-width:500px">You can remove tracks that you have added by selecting <i>Manage sources...</i>
       from the <i>DAS sources</i> menu in Ensembl ContigView.</p>
    <p style="max-width:500px">Ensembl will open in a new window or tab.</p>  
    $warning
  </td>
 </tr>
</table>
EndOfTable

}


sub fail 
{
    print(@_);
    print $CGI->end_html;
    exit;
}


sub make_short_organism_name
{
    my ($asm_info) = @_;
    $asm_info->{organism_latin} =~ /^(.)\S+\s+(...)/;
    return $1.$2;
}

#    my $source_name = $s->description; # Proserver does not support source names, so use desc
#    $source_name =~ s/\s*\(.*//; # Cut everything after the first opening parenthesis
#    $source_name =~ s/ /_/g;  # URL must not contain space. Any other way to do this? %20 does not work...
#    return $source_name;


sub make_organism_string
{
    my $asm_info = shift;
    my $organism;
    if($asm_info->{organism_common}) {
	$organism = ucfirst($asm_info->{organism_common});
    }
    else {
#	$organism = $CGI->i($asm_info->{organism_latin});
	$organism = $asm_info->{organism_latin};
	# Don't use italics because it doesn't work in selection boxes
    }
    return $organism;
}
